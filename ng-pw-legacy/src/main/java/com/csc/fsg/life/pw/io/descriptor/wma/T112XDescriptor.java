package com.csc.fsg.life.pw.io.descriptor.wma;

import com.csc.fsg.life.pw.io.*;

public class T112XDescriptor
    extends TableDescriptor
{
    private static final String pagingSql = "SELECT COMPANY_CODE, PRODUCT_PREFIX, PRODUCT_SUFFIX, STATE_CODE, EFFECTIVE_DATE, FILING_STATUS, NUM_EXEMPTIONS, QUALIFIED_IND, TRANSACTION_CODE, DISTRIBUTION_CODE, MEMO_CODE, TAXABLE_GAIN_AMT, MAND_INDICATOR, OVERRIDE_INDICATOR, TAX_METHOD, BANDING_METHOD, FLAT_AMOUNT, WITHHOLDING_PCT, OVER_AMOUNT, STD_DEDUCT_AMT, STD_DEDUCT_PCT, STD_DEDUCT_MIN_AMT, STD_DEDUCT_MAX_AMT, EXEMPTION_AMT, ADDL_EXEMPT_AMT, MIN_WITHHOLD_AMT, MIN_CHECK_AMT FROM ";
    
    public void initialize()
    {
        setRowClass(T112XRow.class);
        setTableName("T112X");
        setTableId("112");
        super.initialize();
    }
    
    public void initializeColumnDescriptors()
    {
        super.initializeColumnDescriptors();
        addColumnDescriptor(new ColumnDescriptor(this,"getCompanyCode","setCompanyCode","COMPANY_CODE,1,1,3,0,true|,0,CHAR,1,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getProductPrefix","setProductPrefix","PRODUCT_PREFIX,1,2,1,0,true|,0,CHAR,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getProductSuffix","setProductSuffix","PRODUCT_SUFFIX,1,3,1,0,true|,0,CHAR,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getStateCode","setStateCode","STATE_CODE,1,4,3,0,true|,0,CHAR,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getEffectiveDate","setEffectiveDate","EFFECTIVE_DATE,91,5,10,0,true|,0,DATE,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getFilingStatus","setFilingStatus","FILING_STATUS,1,6,1,0,true|,0,CHAR,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getNumExemptions","setNumExemptions","NUM_EXEMPTIONS,3,7,2,0,true|,0,INTEGER,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getQualifiedInd","setQualifiedInd","QUALIFIED_IND,1,8,1,0,true|,0,CHAR,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getTransactionCode","setTransactionCode","TRANSACTION_CODE,1,9,4,0,true|,0,CHAR,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getDistributionCode","setDistributionCode","DISTRIBUTION_CODE,1,10,1,0,true|,0,CHAR,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getMemoCode","setMemoCode","MEMO_CODE,1,11,2,0,true|,0,CHAR,4,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getTaxableGainAmt","setTaxableGainAmt","TAXABLE_GAIN_AMT,3,12,11,2,true|,0,DOUBLE,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getMandIndicator","setMandIndicator","MAND_INDICATOR,1,13,1,0,false|,0,CHAR,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getOverrideIndicator","setOverrideIndicator","OVERRIDE_INDICATOR,1,14,1,0,false|,0,CHAR,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getTaxMethod","setTaxMethod","TAX_METHOD,1,15,1,0,false|,0,CHAR,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getBandingMethod","setBandingMethod","BANDING_METHOD,1,16,1,0,false|,0,CHAR,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getFlatAmount","setFlatAmount","FLAT_AMOUNT,3,17,11,2,false|,0,DOUBLE,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getWithholdingPct","setWithholdingPct","WITHHOLDING_PCT,3,18,5,3,false|,0,DOUBLE,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getOverAmount","setOverAmount","OVER_AMOUNT,3,19,11,2,false|,0,DOUBLE,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getStdDeductAmt","setStdDeductAmt","STD_DEDUCT_AMT,3,20,11,2,false|,0,DOUBLE,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getStdDeductPct","setStdDeductPct","STD_DEDUCT_PCT,3,21,5,3,false|,0,DOUBLE,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getStdDeductMinAmt","setStdDeductMinAmt","STD_DEDUCT_MIN_AMT,3,22,11,2,false|,0,DOUBLE,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getStdDeductMaxAmt","setStdDeductMaxAmt","STD_DEDUCT_MAX_AMT,3,23,11,2,false|,0,DOUBLE,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getExemptionAmt","setExemptionAmt","EXEMPTION_AMT,3,24,11,2,false|,0,DOUBLE,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getAddlExemptAmt","setAddlExemptAmt","ADDL_EXEMPT_AMT,3,25,11,2,false|,0,DOUBLE,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getMinWithholdAmt","setMinWithholdAmt","MIN_WITHHOLD_AMT,3,26,11,2,false|,0,DOUBLE,0,null,null,null,null,null"));
        addColumnDescriptor(new ColumnDescriptor(this,"getMinCheckAmt","setMinCheckAmt","MIN_CHECK_AMT,3,27,11,2,false|,0,DOUBLE,0,null,null,null,null,null"));
    }
    
    public String getPagingSQL(String schemaName,boolean isSubsetMode,boolean isNext, boolean locator)
    {
        String pagingWhere = null;
        String order = null;
        if (isNext) {
            if (isSubsetMode)
                if (locator)
                    pagingWhere = ".T112X WHERE (COMPANY_CODE = :company_code) AND (PRODUCT_PREFIX = :product_prefix) AND ((PRODUCT_SUFFIX > :product_suffix) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE > :state_code) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE > :effective_date) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS > :filing_status) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS > :num_exemptions) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND > :qualified_ind) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE > :transaction_code) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE > :distribution_code) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE > :memo_code) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE = :memo_code AND TAXABLE_GAIN_AMT > :taxable_gain_amt) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE = :memo_code AND TAXABLE_GAIN_AMT = :taxable_gain_amt)) ";
                else 
                    pagingWhere = ".T112X WHERE (COMPANY_CODE = :company_code) AND (PRODUCT_PREFIX = :product_prefix) AND ((PRODUCT_SUFFIX > :product_suffix) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE > :state_code) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE > :effective_date) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS > :filing_status) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS > :num_exemptions) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND > :qualified_ind) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE > :transaction_code) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE > :distribution_code) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE > :memo_code) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE = :memo_code AND TAXABLE_GAIN_AMT > :taxable_gain_amt)) ";
            else
                if (locator)
                    pagingWhere = ".T112X WHERE (COMPANY_CODE = :company_code) AND ((PRODUCT_PREFIX > :product_prefix) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX > :product_suffix) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE > :state_code) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE > :effective_date) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS > :filing_status) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS > :num_exemptions) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND > :qualified_ind) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE > :transaction_code) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE > :distribution_code) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE > :memo_code) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE = :memo_code AND TAXABLE_GAIN_AMT > :taxable_gain_amt) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE = :memo_code AND TAXABLE_GAIN_AMT = :taxable_gain_amt)) ";
                else
                    pagingWhere = ".T112X WHERE (COMPANY_CODE = :company_code) AND ((PRODUCT_PREFIX > :product_prefix) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX > :product_suffix) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE > :state_code) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE > :effective_date) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS > :filing_status) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS > :num_exemptions) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND > :qualified_ind) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE > :transaction_code) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE > :distribution_code) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE > :memo_code) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE = :memo_code AND TAXABLE_GAIN_AMT > :taxable_gain_amt)) ";
            order = " ORDER BY COMPANY_CODE, PRODUCT_PREFIX, PRODUCT_SUFFIX, STATE_CODE, EFFECTIVE_DATE, FILING_STATUS, NUM_EXEMPTIONS, QUALIFIED_IND, TRANSACTION_CODE, DISTRIBUTION_CODE, MEMO_CODE, TAXABLE_GAIN_AMT";
        }
        else {
            if (isSubsetMode)
                pagingWhere = ".T112X WHERE (COMPANY_CODE = :company_code) AND (PRODUCT_PREFIX = :product_prefix) AND ((PRODUCT_SUFFIX < :product_suffix) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE < :state_code) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE < :effective_date) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS < :filing_status) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS < :num_exemptions) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND < :qualified_ind) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE < :transaction_code) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE < :distribution_code) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE < :memo_code) OR (PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE = :memo_code AND TAXABLE_GAIN_AMT < :taxable_gain_amt)) ";
            else
                pagingWhere = ".T112X WHERE (COMPANY_CODE = :company_code) AND ((PRODUCT_PREFIX < :product_prefix) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX < :product_suffix) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE < :state_code) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE < :effective_date) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS < :filing_status) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS < :num_exemptions) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND < :qualified_ind) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE < :transaction_code) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE < :distribution_code) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE < :memo_code) OR (PRODUCT_PREFIX = :product_prefix AND PRODUCT_SUFFIX = :product_suffix AND STATE_CODE = :state_code AND EFFECTIVE_DATE = :effective_date AND FILING_STATUS = :filing_status AND NUM_EXEMPTIONS = :num_exemptions AND QUALIFIED_IND = :qualified_ind AND TRANSACTION_CODE = :transaction_code AND DISTRIBUTION_CODE = :distribution_code AND MEMO_CODE = :memo_code AND TAXABLE_GAIN_AMT < :taxable_gain_amt)) ";
            order = " ORDER BY COMPANY_CODE DESC, PRODUCT_PREFIX DESC, PRODUCT_SUFFIX DESC, STATE_CODE DESC, EFFECTIVE_DATE DESC, FILING_STATUS DESC, NUM_EXEMPTIONS DESC, QUALIFIED_IND DESC, TRANSACTION_CODE DESC, DISTRIBUTION_CODE DESC, MEMO_CODE DESC, TAXABLE_GAIN_AMT DESC";
        }
        return pagingSql + schemaName + pagingWhere + order;
    }
    
    public String prepareInsertStmt(String schemaName) {
        StringBuffer sb = new StringBuffer();
        sb.append("INSERT INTO ").append(schemaName);
        sb.append(".T112X ( ");
        sb.append("COMPANY_CODE, PRODUCT_PREFIX, PRODUCT_SUFFIX, STATE_CODE, EFFECTIVE_DATE, FILING_STATUS, NUM_EXEMPTIONS, QUALIFIED_IND, TRANSACTION_CODE, DISTRIBUTION_CODE, MEMO_CODE, TAXABLE_GAIN_AMT, MAND_INDICATOR, OVERRIDE_INDICATOR, TAX_METHOD, BANDING_METHOD, FLAT_AMOUNT, WITHHOLDING_PCT, OVER_AMOUNT, STD_DEDUCT_AMT, STD_DEDUCT_PCT, STD_DEDUCT_MIN_AMT, STD_DEDUCT_MAX_AMT, EXEMPTION_AMT, ADDL_EXEMPT_AMT, MIN_WITHHOLD_AMT, MIN_CHECK_AMT )");
        sb.append(" VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )");
        return sb.toString();
    }
    
    public String prepareUpdateStmt(String schemaName)
    {
        StringBuffer sb = new StringBuffer();
        sb.append("UPDATE ").append(schemaName);
        sb.append(".T112X ");
        sb.append(" SET COMPANY_CODE = ?, PRODUCT_PREFIX = ?, PRODUCT_SUFFIX = ?, STATE_CODE = ?, EFFECTIVE_DATE = ?, FILING_STATUS = ?, NUM_EXEMPTIONS = ?, QUALIFIED_IND = ?, TRANSACTION_CODE = ?, DISTRIBUTION_CODE = ?, MEMO_CODE = ?, TAXABLE_GAIN_AMT = ?, MAND_INDICATOR = ?, OVERRIDE_INDICATOR = ?, TAX_METHOD = ?, BANDING_METHOD = ?, FLAT_AMOUNT = ?, WITHHOLDING_PCT = ?, OVER_AMOUNT = ?, STD_DEDUCT_AMT = ?, STD_DEDUCT_PCT = ?, STD_DEDUCT_MIN_AMT = ?, STD_DEDUCT_MAX_AMT = ?, EXEMPTION_AMT = ?, ADDL_EXEMPT_AMT = ?, MIN_WITHHOLD_AMT = ?, MIN_CHECK_AMT = ?");
        sb.append(" WHERE COMPANY_CODE = ? AND PRODUCT_PREFIX = ? AND PRODUCT_SUFFIX = ? AND STATE_CODE = ? AND EFFECTIVE_DATE = ? AND FILING_STATUS = ? AND NUM_EXEMPTIONS = ? AND QUALIFIED_IND = ? AND TRANSACTION_CODE = ? AND DISTRIBUTION_CODE = ? AND MEMO_CODE = ? AND TAXABLE_GAIN_AMT = ?");
        return sb.toString();
    }
    
    public String prepareDeleteStmt(String schemaName)
    {
        StringBuffer sb = new StringBuffer();
        sb.append("DELETE FROM ").append(schemaName);
        sb.append(".T112X ");
        sb.append(" WHERE COMPANY_CODE = ? AND PRODUCT_PREFIX = ? AND PRODUCT_SUFFIX = ? AND STATE_CODE = ? AND EFFECTIVE_DATE = ? AND FILING_STATUS = ? AND NUM_EXEMPTIONS = ? AND QUALIFIED_IND = ? AND TRANSACTION_CODE = ? AND DISTRIBUTION_CODE = ? AND MEMO_CODE = ? AND TAXABLE_GAIN_AMT = ?");
        return sb.toString();
    }
}
